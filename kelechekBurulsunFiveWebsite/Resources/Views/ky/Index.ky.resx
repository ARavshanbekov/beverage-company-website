<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="active clients" xml:space="preserve">
    <value>Активдүү Кардарлар</value>
  </data>
  <data name="adygene" xml:space="preserve">
    <value>АДЫГЕНЕ</value>
  </data>
  <data name="adygene description" xml:space="preserve">
    <value>АДЫГЕНЕ МОҢГҮСҮ &amp;laquo;АЛА-АРЧА&amp;raquo; УЛУТТУК ПАРКЫНДА 4216 М ТӨРӨЛГӨН.</value>
  </data>
  <data name="adygene subtopic" xml:space="preserve">
    <value>АДЫГЕНЕ КАПЧЫГАЙЫНАН АЛЫНГАН МОҢГҮ СУУСУ</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Электрондук Почта</value>
  </data>
  <data name="jalalabad27" xml:space="preserve">
    <value>ЖАЛАЛ-АБАД 27</value>
  </data>
  <data name="jalalabad27 description" xml:space="preserve">
    <value>ЧАҢКООНУ ТОЛУК КАНДЫРАТ, ТАМАКТЫ СИҢИРУУГО АБДАН ПАЙДАЛУУ, ИЙГИЛИКТҮҮ ЖҮРӨКТҮН ӨНҮГҮҮСҮН ДААРЫТЫП, МЕТАБОЛИЗМДИ СТИМУЛДАШТЫРАТ, БУЛАРДЫН ЖАРДАМЫ МЕНЕН АДАМ КОШУМЧА КИЛОГРАМДАРДЫ ЖОГОТОТ</value>
  </data>
  <data name="jalalabad27 subtopic" xml:space="preserve">
    <value>Тоодой зор ден-соолук</value>
  </data>
  <data name="jalalabad27 with number" xml:space="preserve">
    <value>Жалал-Абад №27</value>
  </data>
  <data name="message" xml:space="preserve">
    <value>Билдирүү тексти</value>
  </data>
  <data name="name and surname" xml:space="preserve">
    <value>Аты жана Фамилиясы</value>
  </data>
  <data name="page title" xml:space="preserve">
    <value>"Келечек" ЖАК</value>
  </data>
  <data name="send" xml:space="preserve">
    <value>Жөнөтүү</value>
  </data>
  <data name="send message" xml:space="preserve">
    <value>Кабар Калтырыңыз</value>
  </data>
  <data name="topic" xml:space="preserve">
    <value>Тема</value>
  </data>
  <data name="types of assortments" xml:space="preserve">
    <value>Түрдүү Ассортиментер</value>
  </data>
  <data name="who we are" xml:space="preserve">
    <value>Биз Кимбиз?</value>
  </data>
  <data name="who we are answer" xml:space="preserve">
    <value>"Келечек" ЖАК 1991-жылы 10-октябрда негизделген. ЖАКты түзүүнүн демилгечиси жана анын Президенти Туманов Келдибек Туманович. Бүгүнкү күнгө чейин, "Келечек" ЖАК өзүнүн ар тараптуу, келечекке багытталган, өзүнүн күчтүү өндүрүш филиалдары бар болгон ишкана.</value>
  </data>
  <data name="years experience" xml:space="preserve">
    <value>Жылдык тажрыйба</value>
  </data>
</root>